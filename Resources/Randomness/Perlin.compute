// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

float _Dim;
float _SEED;
int _OCTAVES;

#define OCTAVES _OCTAVES
#define SEED _SEED

#include "Shader/perlin.cginc"

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
int ResultWidth;
int ResultHeight;
RWTexture2D<float> Result;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
    FLOAT2 uv = FLOAT2(float(id.x) / float(ResultWidth), float(id.y) / float(ResultHeight));
    Result[id.xy] = classic_perlin2D_fbm(uv * _Dim);
}
